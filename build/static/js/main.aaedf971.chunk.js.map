{"version":3,"sources":["components/SidebarData.js","components/Navbar.js","pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["SidebarData","title","path","icon","cName","Navbar","useState","sidebar","setSidebar","showSidebar","Provider","value","color","className","to","onClick","className-","map","item","index","Home","locationApi","api","App","useEffect","fetchWeather","setLocation","query","setQuery","weather","setWeather","a","fetch","LocationData","json","location","city","WeatherData","main","temp","exact","components","Reports","Products","type","placeholder","onChange","e","target","onKeyPress","evt","key","then","res","result","console","log","name","sys","country","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","Math","round","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aaedf971.chunk.js","sourcesContent":["import React from 'react';\nimport * as FaIcons from 'react-icons/fa';\nimport * as AiIcons from 'react-icons/ai';\nimport * as IoIcons from 'react-icons/io';\n\nexport const SidebarData = [\n  { // per each side bar item !!!1\n    title: \"Home\",\n    path: \"/Home\",\n    icon: <AiIcons.AiFillHome />,\n    cName: \"nav-text\"\n  },\n  {\n    title: \"Reports\",\n    path: \"/reports\",\n    icon: <IoIcons.IoIosPaper />,\n    cName: \"nav-text\"\n  },\n  {\n    title: \"Products\",\n    path: \"/products\",\n    icon: <FaIcons.FaCartPlus />,\n    cName: \"nav-text\"\n  }\n]\n","import React, { useState } from 'react'\nimport * as FaIcons from 'react-icons/fa';\nimport * as AiIcons from 'react-icons/ai';\nimport { Link } from 'react-router-dom';\nimport { SidebarData } from './SidebarData';\nimport './Navbar.css';\nimport { IconContext } from 'react-icons';\n\nfunction Navbar() {\n\n  const [sidebar, setSidebar] = useState(false);\n\n  const showSidebar = () => setSidebar(!sidebar)\n\n  return (\n    <>\n    <IconContext.Provider value={{color: '#fff'}}>\n      <div className=\"navbar\">\n        <Link to=\"#\" className=\"menu-bars\">\n          <FaIcons.FaBars onClick={showSidebar}/>\n        </Link>\n      </div>\n      <nav className={sidebar ? 'nav-menu-active':'nav-menu'}>\n        <ul className='nav-meni-items' onClick={showSidebar}>\n          <li className-=\"navbar-toggle\">\n            <Link to=\"#\" className='menu-bars'>\n              <AiIcons.AiOutlineClose />\n            </Link>\n          </li>\n          {SidebarData.map((item, index) => {\n            return (\n              <li key={index} className={item.cName}>\n                <Link to={item.path}>\n                  {item.icon}\n                  <span>{item.title}</span>\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      </nav>\n      </IconContext.Provider>\n    </>\n  );\n}\n\nexport default Navbar;\n","import React from 'react';\n\nfunction Home() {\n  return (\n    <div className=\"home\">\n      <h1> Home </h1>\n    </div>\n  )\n}\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport Navbar from './components/Navbar';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Reports from './pages/Reports';\nimport Products from './pages/Products';\n\nconst locationApi = {\n  key:\"e18cd550-7ab3-11eb-b603-3d466becf114\",\n  base:\"https://geolocation-db.com/json/\"\n}\n\nconst api = {\n  key: \"6c91341b4c2a841ddae2e208e7da2de4\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\n\n\nfunction App() {\n\n  useEffect(() => {\n    fetchWeather();\n  }, []);\n\n  const [location, setLocation] = useState();\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const fetchWeather = async () => {\n\n    const LocationData = await fetch(\n      `${locationApi.base}${locationApi.key}`\n    );\n\n    const location = await LocationData.json();\n    setLocation(location);\n\n    const WeatherData = await fetch(\n      `${api.base}weather?q=${location.city}&units=metric&APPID=${api.key}`\n    );\n    \n    const weather = await WeatherData.json();\n    setWeather(weather);\n  }\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n        .then(res => res.json())\n        .then(result => {\n          setWeather(result);\n          setQuery('');\n          console.log(result);\n        });\n    }\n  }\n\n  const dateBuilder = (d) => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day} ${date} ${month} ${year}`\n  }\n\n  return (\n    <div className={(typeof weather.main != \"undefined\") ? ((weather.main.temp > 16) ? 'app warm' : 'app') : 'app'}>\n      <Navbar />\n      <Switch>\n        <Route path='/home' exact components={Home} />\n        <Route path='/reports' components={Reports} />\n        <Route path='/products' components={Products} />\n      </Switch>\n      <main>\n        <div className=\"search-box\">\n          <input \n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Search...\"\n            onChange={e => setQuery(e.target.value)}\n            value={query}\n            onKeyPress={search}\n          />\n        </div>\n        {(typeof weather.main != \"undefined\") ? (\n        <div>\n          <div className=\"location-box\">\n            <div className=\"location\">{weather.name}, {weather.sys.country}</div>\n            <div className=\"date\">{dateBuilder(new Date())}</div>\n          </div>\n          <div className=\"weather-box\">\n            <div className=\"temp\">\n              {Math.round(weather.main.temp)}Â°c\n            </div>\n            <div className=\"weather\">{weather.weather[0].main}</div>\n          </div>\n        </div>\n        ) : ('')}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}